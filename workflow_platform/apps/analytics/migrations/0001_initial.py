# Generated by Django 4.2.7 on 2025-08-09 13:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("workflows", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalyticsDashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("overview", "Overview"),
                            ("performance", "Performance"),
                            ("usage", "Usage"),
                            ("errors", "Errors"),
                            ("custom", "Custom"),
                        ],
                        default="overview",
                        max_length=20,
                    ),
                ),
                ("layout", models.JSONField(default=dict)),
                ("filters", models.JSONField(default=dict)),
                ("refresh_interval", models.IntegerField(default=300)),
                ("is_public", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboards",
                        to="organizations.organization",
                    ),
                ),
                (
                    "shared_with_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_dashboards",
            },
        ),
        migrations.CreateModel(
            name="AnalyticsAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("threshold", "Threshold Alert"),
                            ("anomaly", "Anomaly Detection"),
                            ("trend", "Trend Alert"),
                            ("sla", "SLA Violation"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                        ],
                        default="warning",
                        max_length=20,
                    ),
                ),
                ("metric_name", models.CharField(max_length=255)),
                ("condition", models.JSONField(default=dict)),
                ("threshold_config", models.JSONField(default=dict)),
                ("notification_channels", models.JSONField(default=list)),
                ("notification_config", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("last_triggered_at", models.DateTimeField(blank=True, null=True)),
                ("trigger_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_alerts",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_alerts",
            },
        ),
        migrations.CreateModel(
            name="UsageAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("active_users", models.IntegerField(default=0)),
                ("new_users", models.IntegerField(default=0)),
                ("total_users", models.IntegerField(default=0)),
                ("workflows_created", models.IntegerField(default=0)),
                ("workflows_executed", models.IntegerField(default=0)),
                ("total_workflows", models.IntegerField(default=0)),
                ("total_executions", models.IntegerField(default=0)),
                ("successful_executions", models.IntegerField(default=0)),
                ("failed_executions", models.IntegerField(default=0)),
                ("average_execution_time", models.FloatField(default=0)),
                ("total_compute_hours", models.FloatField(default=0)),
                ("total_storage_gb", models.FloatField(default=0)),
                ("api_calls_count", models.IntegerField(default=0)),
                ("feature_usage", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_analytics",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "usage_analytics",
                "indexes": [
                    models.Index(
                        fields=["organization", "date"],
                        name="usage_analy_organiz_22f108_idx",
                    ),
                    models.Index(fields=["date"], name="usage_analy_date_412f12_idx"),
                ],
                "unique_together": {("organization", "date")},
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("avg_execution_time", models.FloatField(default=0)),
                ("min_execution_time", models.FloatField(default=0)),
                ("max_execution_time", models.FloatField(default=0)),
                ("p95_execution_time", models.FloatField(default=0)),
                ("executions_per_hour", models.FloatField(default=0)),
                ("peak_concurrent_executions", models.IntegerField(default=0)),
                ("avg_cpu_usage", models.FloatField(default=0)),
                ("avg_memory_usage", models.FloatField(default=0)),
                ("peak_memory_usage", models.FloatField(default=0)),
                ("error_rate", models.FloatField(default=0)),
                ("timeout_rate", models.FloatField(default=0)),
                ("retry_rate", models.FloatField(default=0)),
                ("data_quality_score", models.FloatField(default=0)),
                ("reliability_score", models.FloatField(default=0)),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to="organizations.organization",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "performance_metrics",
                "indexes": [
                    models.Index(
                        fields=["organization", "period_start"],
                        name="performance_organiz_875817_idx",
                    ),
                    models.Index(
                        fields=["workflow", "period_start"],
                        name="performance_workflo_609fa1_idx",
                    ),
                    models.Index(
                        fields=["period_start"], name="performance_period__b1a856_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsWidget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("metric", "Metric Card"),
                            ("chart", "Chart"),
                            ("table", "Data Table"),
                            ("gauge", "Gauge"),
                            ("timeline", "Timeline"),
                            ("heatmap", "Heatmap"),
                            ("custom", "Custom"),
                        ],
                        default="metric",
                        max_length=20,
                    ),
                ),
                (
                    "chart_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("line", "Line Chart"),
                            ("bar", "Bar Chart"),
                            ("pie", "Pie Chart"),
                            ("area", "Area Chart"),
                            ("scatter", "Scatter Plot"),
                            ("histogram", "Histogram"),
                        ],
                        max_length=20,
                    ),
                ),
                ("query_config", models.JSONField(default=dict)),
                ("display_config", models.JSONField(default=dict)),
                ("size_config", models.JSONField(default=dict)),
                ("data_source", models.CharField(default="executions", max_length=100)),
                ("auto_refresh", models.BooleanField(default=True)),
                ("refresh_interval", models.IntegerField(default=60)),
                ("position_x", models.IntegerField(default=0)),
                ("position_y", models.IntegerField(default=0)),
                ("width", models.IntegerField(default=4)),
                ("height", models.IntegerField(default=3)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="analytics.analyticsdashboard",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_widgets",
                "indexes": [
                    models.Index(
                        fields=["dashboard", "is_active"],
                        name="analytics_w_dashboa_1b6110_idx",
                    ),
                    models.Index(
                        fields=["widget_type"], name="analytics_w_widget__b454ec_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily Summary"),
                            ("weekly", "Weekly Report"),
                            ("monthly", "Monthly Report"),
                            ("quarterly", "Quarterly Report"),
                            ("custom", "Custom Report"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                ("report_config", models.JSONField(default=dict)),
                ("filters", models.JSONField(default=dict)),
                ("schedule_expression", models.CharField(max_length=100)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("slack", "Slack"),
                            ("webhook", "Webhook"),
                            ("download", "Download Only"),
                        ],
                        default="email",
                        max_length=20,
                    ),
                ),
                ("recipients", models.JSONField(default=list)),
                ("delivery_config", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("last_generated_at", models.DateTimeField(blank=True, null=True)),
                ("next_generation_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_reports",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_reports",
                "indexes": [
                    models.Index(
                        fields=["organization", "is_active"],
                        name="analytics_r_organiz_7d34ac_idx",
                    ),
                    models.Index(
                        fields=["next_generation_at"],
                        name="analytics_r_next_ge_af8b71_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("count", "Count"),
                            ("sum", "Sum"),
                            ("average", "Average"),
                            ("percentage", "Percentage"),
                            ("ratio", "Ratio"),
                            ("rate", "Rate"),
                            ("duration", "Duration"),
                        ],
                        max_length=20,
                    ),
                ),
                ("category", models.CharField(max_length=100)),
                ("value", models.FloatField()),
                ("unit", models.CharField(blank=True, max_length=50)),
                (
                    "aggregation_period",
                    models.CharField(
                        choices=[
                            ("hour", "Hourly"),
                            ("day", "Daily"),
                            ("week", "Weekly"),
                            ("month", "Monthly"),
                            ("quarter", "Quarterly"),
                            ("year", "Yearly"),
                        ],
                        max_length=20,
                    ),
                ),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("filters", models.JSONField(default=dict)),
                ("metadata", models.JSONField(default=dict)),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_metrics",
                        to="organizations.organization",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_metrics",
                "indexes": [
                    models.Index(
                        fields=["organization", "category", "period_start"],
                        name="analytics_m_organiz_505446_idx",
                    ),
                    models.Index(
                        fields=["name", "period_start"],
                        name="analytics_m_name_1ee972_idx",
                    ),
                    models.Index(
                        fields=["workflow", "metric_type"],
                        name="analytics_m_workflo_20eed4_idx",
                    ),
                ],
                "unique_together": {
                    (
                        "organization",
                        "name",
                        "category",
                        "aggregation_period",
                        "period_start",
                    )
                },
            },
        ),
        migrations.AddIndex(
            model_name="analyticsdashboard",
            index=models.Index(
                fields=["organization", "is_active"],
                name="analytics_d_organiz_9c2cc9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsdashboard",
            index=models.Index(
                fields=["dashboard_type"], name="analytics_d_dashboa_7810aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsalert",
            index=models.Index(
                fields=["organization", "is_active"],
                name="analytics_a_organiz_6ca96b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsalert",
            index=models.Index(
                fields=["metric_name", "is_active"],
                name="analytics_a_metric__91bf3f_idx",
            ),
        ),
    ]

# Generated by Django 4.2.7 on 2025-08-09 13:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organizations", "0001_initial"),
        ("workflows", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExecutionSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cron_expression", models.CharField(max_length=100)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("disabled", "Disabled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("max_concurrent_executions", models.IntegerField(default=1)),
                ("timeout_minutes", models.IntegerField(default=60)),
                ("next_run_time", models.DateTimeField()),
                ("last_run_time", models.DateTimeField(blank=True, null=True)),
                ("run_count", models.IntegerField(default=0)),
                ("failure_count", models.IntegerField(default=0)),
                ("max_failures", models.IntegerField(default=5)),
                ("failure_notification_threshold", models.IntegerField(default=3)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "workflow",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "execution_schedules",
                "indexes": [
                    models.Index(
                        fields=["status", "next_run_time"],
                        name="execution_s_status_586737_idx",
                    ),
                    models.Index(
                        fields=["workflow"], name="execution_s_workflo_d4e589_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ExecutionResource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("execution_id", models.CharField(db_index=True, max_length=255)),
                ("cpu_seconds", models.FloatField(default=0)),
                ("memory_mb_seconds", models.FloatField(default=0)),
                ("storage_mb", models.FloatField(default=0)),
                ("network_bytes", models.FloatField(default=0)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("duration_seconds", models.FloatField()),
                ("node_resource_usage", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "execution_resources",
                "indexes": [
                    models.Index(
                        fields=["organization", "start_time"],
                        name="execution_r_organiz_ab417c_idx",
                    ),
                    models.Index(
                        fields=["execution_id"], name="execution_r_executi_0576f5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ExecutionQueue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("execution_id", models.CharField(max_length=255, unique=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("trigger_type", models.CharField(max_length=50)),
                ("trigger_data", models.JSONField(default=dict)),
                (
                    "scheduled_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("max_attempts", models.IntegerField(default=3)),
                ("attempt_count", models.IntegerField(default=0)),
                ("input_data", models.JSONField(default=dict)),
                ("variables", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("error_details", models.JSONField(default=dict)),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_queue",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "execution_queue",
                "indexes": [
                    models.Index(
                        fields=["status", "priority", "scheduled_at"],
                        name="execution_q_status_0776fa_idx",
                    ),
                    models.Index(
                        fields=["workflow", "status"],
                        name="execution_q_workflo_36f278_idx",
                    ),
                    models.Index(
                        fields=["execution_id"], name="execution_q_executi_3fa130_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ExecutionHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("execution_id", models.CharField(db_index=True, max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("timeout", "Timeout"),
                        ],
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField()),
                ("execution_time", models.DurationField()),
                ("nodes_executed", models.IntegerField()),
                ("nodes_failed", models.IntegerField(default=0)),
                ("memory_peak_mb", models.FloatField(blank=True, null=True)),
                ("trigger_type", models.CharField(max_length=50)),
                ("input_size_bytes", models.IntegerField(default=0)),
                ("output_size_bytes", models.IntegerField(default=0)),
                ("error_type", models.CharField(blank=True, max_length=100)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_history",
                        to="organizations.organization",
                    ),
                ),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_history",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "execution_history",
                "indexes": [
                    models.Index(
                        fields=["organization", "started_at"],
                        name="execution_h_organiz_85a984_idx",
                    ),
                    models.Index(
                        fields=["workflow", "status"],
                        name="execution_h_workflo_4c9828_idx",
                    ),
                    models.Index(
                        fields=["status", "started_at"],
                        name="execution_h_status_612740_idx",
                    ),
                    models.Index(
                        fields=["trigger_type", "started_at"],
                        name="execution_h_trigger_6f2ea5_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ExecutionAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("failure", "Execution Failure"),
                            ("timeout", "Execution Timeout"),
                            ("high_failure_rate", "High Failure Rate"),
                            ("resource_limit", "Resource Limit Exceeded"),
                            ("dependency_failure", "Dependency Failure"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("acknowledged", "Acknowledged"),
                            ("resolved", "Resolved"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                ("execution_id", models.CharField(blank=True, max_length=255)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("notification_sent", models.BooleanField(default=False)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "notified_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="execution_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_alerts",
                        to="organizations.organization",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_alerts",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "execution_alerts",
                "indexes": [
                    models.Index(
                        fields=["organization", "status"],
                        name="execution_a_organiz_ca97b7_idx",
                    ),
                    models.Index(
                        fields=["workflow", "alert_type"],
                        name="execution_a_workflo_2e34d0_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="execution_a_status_90be33_idx",
                    ),
                ],
            },
        ),
    ]

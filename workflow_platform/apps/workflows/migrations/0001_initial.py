# Generated by Django 4.2.7 on 2025-08-09 13:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkflowCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("color", models.CharField(default="#6366f1", max_length=7)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Workflow Categories",
                "db_table": "workflow_categories",
            },
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("nodes", models.JSONField(default=list)),
                ("connections", models.JSONField(default=list)),
                ("variables", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("archived", "Archived"),
                            ("error", "Error"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("webhook", "Webhook"),
                            ("schedule", "Schedule"),
                            ("event", "Event"),
                            ("api", "API Call"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                ("version", models.IntegerField(default=1)),
                ("is_latest_version", models.BooleanField(default=True)),
                ("execution_timeout", models.IntegerField(default=300)),
                ("max_retries", models.IntegerField(default=3)),
                ("retry_delay", models.IntegerField(default=60)),
                ("parallel_execution", models.BooleanField(default=True)),
                ("schedule_expression", models.CharField(blank=True, max_length=255)),
                ("schedule_timezone", models.CharField(default="UTC", max_length=50)),
                ("next_run_at", models.DateTimeField(blank=True, null=True)),
                ("settings", models.JSONField(blank=True, default=dict)),
                ("error_handling", models.JSONField(blank=True, default=dict)),
                ("is_public", models.BooleanField(default=False)),
                ("is_template", models.BooleanField(default=False)),
                ("shared_with", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("total_executions", models.IntegerField(default=0)),
                ("successful_executions", models.IntegerField(default=0)),
                ("failed_executions", models.IntegerField(default=0)),
                ("last_executed_at", models.DateTimeField(blank=True, null=True)),
                ("average_execution_time", models.FloatField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workflows.workflowcategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_workflows",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflows",
                        to="organizations.organization",
                    ),
                ),
                (
                    "parent_workflow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="workflows.workflow",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_workflows",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "workflows",
            },
        ),
        migrations.CreateModel(
            name="WorkflowTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("short_description", models.CharField(max_length=500)),
                ("long_description", models.TextField()),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=20,
                    ),
                ),
                ("industry", models.CharField(blank=True, max_length=100)),
                ("use_case", models.CharField(blank=True, max_length=200)),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="template_thumbnails/"
                    ),
                ),
                ("screenshots", models.JSONField(blank=True, default=list)),
                ("usage_count", models.IntegerField(default=0)),
                ("rating", models.FloatField(default=0)),
                ("rating_count", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_official", models.BooleanField(default=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("required_integrations", models.JSONField(blank=True, default=list)),
                (
                    "required_plan",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("pro", "Pro"),
                            ("business", "Business"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="free",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "workflow",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="template",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "workflow_templates",
                "indexes": [
                    models.Index(
                        fields=["is_featured", "published_at"],
                        name="workflow_te_is_feat_9d6709_idx",
                    ),
                    models.Index(
                        fields=["industry", "use_case"],
                        name="workflow_te_industr_420328_idx",
                    ),
                    models.Index(
                        fields=["rating", "usage_count"],
                        name="workflow_te_rating_c0ba93_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WorkflowShare",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "permission",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("edit", "Edit"),
                            ("execute", "Execute"),
                            ("admin", "Admin"),
                        ],
                        default="view",
                        max_length=20,
                    ),
                ),
                ("shared_at", models.DateTimeField(auto_now_add=True)),
                (
                    "shared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow_shares_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shared_workflows",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "workflow_shares",
                "unique_together": {("workflow", "shared_with")},
            },
        ),
        migrations.CreateModel(
            name="WorkflowExecution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("timeout", "Timeout"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "trigger_source",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("webhook", "Webhook"),
                            ("schedule", "Schedule"),
                            ("api", "API"),
                            ("retry", "Retry"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                ("input_data", models.JSONField(blank=True, default=dict)),
                ("output_data", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("nodes_executed", models.IntegerField(default=0)),
                ("nodes_failed", models.IntegerField(default=0)),
                ("memory_usage_mb", models.FloatField(default=0)),
                ("cpu_usage_percent", models.FloatField(default=0)),
                ("retry_count", models.IntegerField(default=0)),
                ("execution_metadata", models.JSONField(blank=True, default=dict)),
                (
                    "parent_execution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflows.workflowexecution",
                    ),
                ),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "workflow_executions",
                "indexes": [
                    models.Index(
                        fields=["workflow", "status"],
                        name="workflow_ex_workflo_05fdb2_idx",
                    ),
                    models.Index(
                        fields=["started_at"], name="workflow_ex_started_034b67_idx"
                    ),
                    models.Index(
                        fields=["trigger_source", "status"],
                        name="workflow_ex_trigger_93930e_idx",
                    ),
                    models.Index(
                        fields=["triggered_by", "started_at"],
                        name="workflow_ex_trigger_c364b2_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WorkflowComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField()),
                ("node_id", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="workflows.workflowcomment",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="workflows.workflow",
                    ),
                ),
            ],
            options={
                "db_table": "workflow_comments",
                "indexes": [
                    models.Index(
                        fields=["workflow", "created_at"],
                        name="workflow_co_workflo_09279b_idx",
                    ),
                    models.Index(
                        fields=["node_id"], name="workflow_co_node_id_9c3ba4_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["organization", "status"], name="workflows_organiz_b76757_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["trigger_type", "status"], name="workflows_trigger_b9fa58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["created_at"], name="workflows_created_1220ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["next_run_at"], name="workflows_next_ru_208252_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["is_template", "is_public"], name="workflows_is_temp_1ab14d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workflow",
            unique_together={("organization", "name", "version")},
        ),
    ]
